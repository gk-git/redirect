/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AboutWeb {
    }
    interface AppRoot {
    }
    interface ContactForm {
    }
    interface FooterSection {
    }
    interface HeroSection {
    }
    interface MenuToggleIcon {
    }
    interface MyComponent {
    }
    interface RotatingCompass {
    }
    interface SiteButton {
    }
    interface TextWithColor {
    }
    interface WebAbout {
    }
    interface WebHeader {
    }
}
declare global {
    interface HTMLAboutWebElement extends Components.AboutWeb, HTMLStencilElement {
    }
    var HTMLAboutWebElement: {
        prototype: HTMLAboutWebElement;
        new (): HTMLAboutWebElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLContactFormElement extends Components.ContactForm, HTMLStencilElement {
    }
    var HTMLContactFormElement: {
        prototype: HTMLContactFormElement;
        new (): HTMLContactFormElement;
    };
    interface HTMLFooterSectionElement extends Components.FooterSection, HTMLStencilElement {
    }
    var HTMLFooterSectionElement: {
        prototype: HTMLFooterSectionElement;
        new (): HTMLFooterSectionElement;
    };
    interface HTMLHeroSectionElement extends Components.HeroSection, HTMLStencilElement {
    }
    var HTMLHeroSectionElement: {
        prototype: HTMLHeroSectionElement;
        new (): HTMLHeroSectionElement;
    };
    interface HTMLMenuToggleIconElement extends Components.MenuToggleIcon, HTMLStencilElement {
    }
    var HTMLMenuToggleIconElement: {
        prototype: HTMLMenuToggleIconElement;
        new (): HTMLMenuToggleIconElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLRotatingCompassElement extends Components.RotatingCompass, HTMLStencilElement {
    }
    var HTMLRotatingCompassElement: {
        prototype: HTMLRotatingCompassElement;
        new (): HTMLRotatingCompassElement;
    };
    interface HTMLSiteButtonElement extends Components.SiteButton, HTMLStencilElement {
    }
    var HTMLSiteButtonElement: {
        prototype: HTMLSiteButtonElement;
        new (): HTMLSiteButtonElement;
    };
    interface HTMLTextWithColorElement extends Components.TextWithColor, HTMLStencilElement {
    }
    var HTMLTextWithColorElement: {
        prototype: HTMLTextWithColorElement;
        new (): HTMLTextWithColorElement;
    };
    interface HTMLWebAboutElement extends Components.WebAbout, HTMLStencilElement {
    }
    var HTMLWebAboutElement: {
        prototype: HTMLWebAboutElement;
        new (): HTMLWebAboutElement;
    };
    interface HTMLWebHeaderElement extends Components.WebHeader, HTMLStencilElement {
    }
    var HTMLWebHeaderElement: {
        prototype: HTMLWebHeaderElement;
        new (): HTMLWebHeaderElement;
    };
    interface HTMLElementTagNameMap {
        "about-web": HTMLAboutWebElement;
        "app-root": HTMLAppRootElement;
        "contact-form": HTMLContactFormElement;
        "footer-section": HTMLFooterSectionElement;
        "hero-section": HTMLHeroSectionElement;
        "menu-toggle-icon": HTMLMenuToggleIconElement;
        "my-component": HTMLMyComponentElement;
        "rotating-compass": HTMLRotatingCompassElement;
        "site-button": HTMLSiteButtonElement;
        "text-with-color": HTMLTextWithColorElement;
        "web-about": HTMLWebAboutElement;
        "web-header": HTMLWebHeaderElement;
    }
}
declare namespace LocalJSX {
    interface AboutWeb {
    }
    interface AppRoot {
    }
    interface ContactForm {
    }
    interface FooterSection {
    }
    interface HeroSection {
    }
    interface MenuToggleIcon {
    }
    interface MyComponent {
    }
    interface RotatingCompass {
    }
    interface SiteButton {
    }
    interface TextWithColor {
    }
    interface WebAbout {
    }
    interface WebHeader {
    }
    interface IntrinsicElements {
        "about-web": AboutWeb;
        "app-root": AppRoot;
        "contact-form": ContactForm;
        "footer-section": FooterSection;
        "hero-section": HeroSection;
        "menu-toggle-icon": MenuToggleIcon;
        "my-component": MyComponent;
        "rotating-compass": RotatingCompass;
        "site-button": SiteButton;
        "text-with-color": TextWithColor;
        "web-about": WebAbout;
        "web-header": WebHeader;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "about-web": LocalJSX.AboutWeb & JSXBase.HTMLAttributes<HTMLAboutWebElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "contact-form": LocalJSX.ContactForm & JSXBase.HTMLAttributes<HTMLContactFormElement>;
            "footer-section": LocalJSX.FooterSection & JSXBase.HTMLAttributes<HTMLFooterSectionElement>;
            "hero-section": LocalJSX.HeroSection & JSXBase.HTMLAttributes<HTMLHeroSectionElement>;
            "menu-toggle-icon": LocalJSX.MenuToggleIcon & JSXBase.HTMLAttributes<HTMLMenuToggleIconElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "rotating-compass": LocalJSX.RotatingCompass & JSXBase.HTMLAttributes<HTMLRotatingCompassElement>;
            "site-button": LocalJSX.SiteButton & JSXBase.HTMLAttributes<HTMLSiteButtonElement>;
            "text-with-color": LocalJSX.TextWithColor & JSXBase.HTMLAttributes<HTMLTextWithColorElement>;
            "web-about": LocalJSX.WebAbout & JSXBase.HTMLAttributes<HTMLWebAboutElement>;
            "web-header": LocalJSX.WebHeader & JSXBase.HTMLAttributes<HTMLWebHeaderElement>;
        }
    }
}
